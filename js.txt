data.js
// === DATOS DE JUGADORES ===
export const jugadores = [
  {
    nombre: "Ziir",
    desc: "Rey de la rotación.",
    img: "/img/Foto-Ziir.png",
    horas: 2900,
    stats: {
      goals: 47.98,
      assists: 18.27,
      saves: 33.75
    },
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/steam/76561198091825758/overview",
  },
  {
    nombre: "Bksp",
    desc: "El Lloressy",
    img: "/img/Foto-Bksp.png",
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/epic/Bksp/overview",
    streamer: true,
    enVivo: false,
    logrosDestacados: true,
    horas: 2945,
    stats: {
      goals: 47.98,
      saves: 33.75,
      assists: 18.27
    }
  },
  {
    nombre: "R.K.X", 
    desc: "Turbo Roka", 
    img: "/img/Foto-R.K.X.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/epic/R%20.%20K%20.%20X/overview", 
    streamer: true, 
    enVivo: false, 
    logrosDestacados: true, 
    horas: 2970, 
    stats: {
      goals: 47.98, 
      saves: 33.75, 
      assists: 18.27
    } 
  },
  {
    nombre: "Kenkyomasu", 
    desc: "El ser incomprendido.", 
    img: "/img/Foto-Kenkyo.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/epic/kenkyomasu/overview", 
    streamer: true, 
    enVivo: false, 
    logrosDestacados: false, 
    horas: 2718,
    stats: {
      goals: 47.98, 
      saves: 33.75, 
      assists: 18.27 
    }
  },
  {
    nombre: "Alejjoh", 
    desc: "El Parce", 
    img: "/img/Foto-Alejjohorny.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/xbl/alejjoh/overview", 
    streamer: false, 
    enVivo: false, 
    logrosDestacados: false, 
    horas: false, 
    stats: { 
      goals: 47.98, 
      saves: 33.75, 
      assists: 18.27 
    }
  },
  {
    nombre: "Claudioxzt2", 
    desc: "Qué terrible chiquillos.", 
    img: "/img/Foto-Claudioxzt2.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/steam/76561198145230003/overview", 
    streamer: false, 
    enVivo: false, 
    logrosDestacados: false, 
    horas: 1967, 
    stats: {
       goals: 47.98, 
       saves: 33.75, 
       assists: 18.27 
      }
  },
  {
    nombre: "Palasutro", 
    desc: "Faker", 
    img: "/img/Foto-Palasutro.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/epic/Fernando_pala/overview", 
    streamer: false, 
    enVivo: false, 
    logrosDestacados: false, 
    horas: 1748,
    stats: { 
      goals: 47.98, 
      saves: 33.75, 
      assists: 18.27 
    }
  },
  {
    nombre: "PQNelfox01", 
    desc: "El Mute", 
    img: "/img/Foto-PQNelfox01.png", 
    tracker: "https://rocketleague.tracker.network/rocket-league/profile/epic/Tochka-U/overview", 
    streamer: true, 
    enVivo: false, 
    logrosDestacados: false,
    horas: 1927,
    stats: {
      goals: 47.98, 
      saves: 33.75, 
      assists: 18.27 }
  },
];

galeria.js
export function renderGaleria(jugadores) {
  const contenedor = document.getElementById("galeria-jugadores");
  
  if (!contenedor) {
    console.error("Elemento #galeria-jugadores no encontrado");
    return;
  }

  contenedor.innerHTML = jugadores.map(jugador => `
    <div class="card">
      <img src="${jugador.img}" alt="${jugador.nombre}" loading="lazy">
      <div class="info">
        <h3>${jugador.nombre}</h3>
        <p>${jugador.desc}</p>
      </div>
    </div>
  `).join('');
}

index.js
document.addEventListener("DOMContentLoaded", () => {
    const btnLogo = document.getElementById("btnLogoSNTS");

    btnLogo.addEventListener("click", () => {
        // Redirige automáticamente sin preguntar
        window.location.href = "html/plantilla.html";
    });
});

logros.js
export function renderLogros() {
  const logros = [
    { es: "Top 8 en Sudamerican Open (Mayo 2024)", en: "Top 8 in Sudamerican Open (May 2024)" },
    { es: "Campeones del Torneo Nocturno (Febrero 2024)", en: "Champions of Night Tournament (Feb 2024)" },
    { es: "Mejor asistencia media por jugador", en: "Best average assist per player" },
    { es: "Rotaciones más limpias según análisis interno", en: "Cleanest rotations based on internal analysis" }
  ];
  const lista = document.getElementById("logros-lista");
  lista.innerHTML = logros.map(l => `<li data-en="${l.en}">${l.es}</li>`).join("");
}

main.js
import { jugadores } from './data.js';
import { renderGaleria } from './galeria.js';
import { renderRuleta } from './ruleta.js';
import { renderLogros } from './logros.js';
import { iniciarUIEvents, iniciarFiltros } from './ui.js';

document.addEventListener("DOMContentLoaded", () => {
  renderGaleria(jugadores);
  renderRuleta(jugadores);
  renderLogros();
  iniciarUIEvents();
  iniciarFiltros(jugadores, renderGaleria);
});

ruleta.js
export function renderRuleta(jugadores) {
  const contenedor = document.getElementById("ruleta-container");
  let index = 0;

  const crearCarta = (jugador) => `
    <div class="flip-card">
      <div class="flip-card-inner">
        <div class="flip-card-front">
          <img src="${jugador.img}" alt="${jugador.nombre}">
          <h3>${jugador.nombre}</h3>
          <p>${jugador.desc}</p>
          ${jugador.horas ? `<div class="horas">${jugador.horas} horas</div>` : ''}
        </div>
        <div class="flip-card-back">
          <h4>Estadísticas</h4>
          <div class="stats">
            <p><strong>Goles:</strong> ${jugador.stats?.goals || '0'}%</p>
            <p><strong>Asistencias:</strong> ${jugador.stats?.assists || '0'}%</p>
            <p><strong>Atajadas:</strong> ${jugador.stats?.saves || '0'}%</p>
          </div>
          <a href="${jugador.tracker}" class="tracker-btn" target="_blank">Ver Tracker</a>
        </div>
      </div>
    </div>
  `;

  const actualizarRuleta = () => {
    contenedor.innerHTML = `
      <div class="ruleta-wrapper">
        <button class="ruleta-btn" id="ruleta-prev">◀</button>
        ${crearCarta(jugadores[index])}
        <button class="ruleta-btn" id="ruleta-next">▶</button>
      </div>
    `;

    // Event listeners para navegación
    document.getElementById("ruleta-prev").addEventListener("click", () => {
      index = (index - 1 + jugadores.length) % jugadores.length;
      actualizarRuleta();
    });

    document.getElementById("ruleta-next").addEventListener("click", () => {
      index = (index + 1) % jugadores.length;
      actualizarRuleta();
    });
  };

  actualizarRuleta();
}

ui.js
export function iniciarUIEvents() {
  document.getElementById("abrirMenu").onclick = () => {
    document.getElementById("navLateral").classList.add("abierto");
    document.body.classList.add("menu-abierto");
  };
  document.getElementById("cerrarMenu").onclick = () => {
    document.getElementById("navLateral").classList.remove("abierto");
    document.body.classList.remove("menu-abierto");
  };
  document.getElementById("toggleModo").onclick = () => {
    document.body.classList.toggle("light-mode");
  };
  document.getElementById("idiomaBtn").onclick = () => {
    document.querySelectorAll("[data-en]").forEach(el => {
      const actual = el.textContent;
      el.textContent = el.getAttribute("data-en");
      el.setAttribute("data-en", actual);
    });
  };
  document.getElementById("presentacionBtn").onclick = () => {
    const seccion = document.getElementById("presentacion-section");
    if (seccion) {
      seccion.scrollIntoView({ behavior: "smooth" });
    }
  };
}

export function iniciarFiltros(jugadores, renderGaleria) {
  document.querySelectorAll("[data-filtro]").forEach(btn => {
    btn.onclick = () => {
      const filtro = btn.getAttribute("data-filtro");
      let filtrados = jugadores;
      if (filtro === "streamers") filtrados = jugadores.filter(j => j.streamer);
      else if (filtro === "logros") filtrados = jugadores.filter(j => j.logrosDestacados);
      else if (filtro === "horas") filtrados = jugadores.filter(j => j.horas >= 1000);
      renderGaleria(filtrados);
      document.getElementById("navLateral").classList.remove("abierto");
      document.body.classList.remove("menu-abierto");
    };
  });
}
